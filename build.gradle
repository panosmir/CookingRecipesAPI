buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
	baseName = 'gs-accessing-data-mysql'
	version =  '0.1.0'
}


version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	compile("org.springframework.boot:spring-boot-starter-web")

	// https://mvnrepository.com/artifact/org.springframework/spring-core
	compile group: 'org.springframework', name: 'spring-core', version: '4.3.7.RELEASE'

	// https://mvnrepository.com/artifact/org.springframework/spring-webmvc
	compile group: 'org.springframework', name: 'spring-webmvc', version: '4.3.7.RELEASE'

	// https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-mapper-asl
	compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.13'

	// JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'

	compile 'mysql:mysql-connector-java'
	runtime("mysql:mysql-connector-java")

	testCompile('org.springframework.boot:spring-boot-starter-test')
}
